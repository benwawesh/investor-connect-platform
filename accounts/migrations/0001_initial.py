# Generated by Django 4.2.7 on 2025-09-27 13:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('investor', 'Investor'), ('regular', 'Regular User'), ('job_seeker', 'Job Seeker')], max_length=15)),
                ('is_verified', models.BooleanField(default=False)),
                ('subscription_paid', models.BooleanField(default=False)),
                ('profile_description', models.TextField(blank=True, null=True)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('banned', 'Banned')], default='active', max_length=20)),
                ('suspended_until', models.DateTimeField(blank=True, null=True)),
                ('suspension_reason', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileExtension',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('location', models.CharField(blank=True, help_text='City, Country', max_length=100)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('industry', models.CharField(blank=True, choices=[('technology', 'Technology'), ('healthcare', 'Healthcare'), ('finance', 'Finance'), ('retail', 'Retail'), ('manufacturing', 'Manufacturing'), ('education', 'Education'), ('real_estate', 'Real Estate'), ('agriculture', 'Agriculture'), ('entertainment', 'Entertainment'), ('other', 'Other')], max_length=20)),
                ('experience_level', models.CharField(blank=True, choices=[('beginner', 'Beginner (0-1 years)'), ('intermediate', 'Intermediate (2-5 years)'), ('experienced', 'Experienced (6-10 years)'), ('expert', 'Expert (10+ years)')], max_length=20)),
                ('investment_range', models.CharField(blank=True, choices=[('under_10k', 'Under $10,000'), ('10k_50k', '$10,000 - $50,000'), ('50k_100k', '$50,000 - $100,000'), ('100k_500k', '$100,000 - $500,000'), ('500k_1m', '$500,000 - $1,000,000'), ('over_1m', 'Over $1,000,000')], max_length=20)),
                ('investment_focus', models.CharField(blank=True, choices=[('early_stage', 'Early Stage Startups'), ('growth_stage', 'Growth Stage Companies'), ('tech_focused', 'Technology Focused'), ('social_impact', 'Social Impact'), ('local_business', 'Local Businesses'), ('diversified', 'Diversified Portfolio')], max_length=20)),
                ('business_stage', models.CharField(blank=True, choices=[('idea', 'Idea Stage'), ('concept', 'Concept Development'), ('mvp', 'MVP/Prototype'), ('early', 'Early Stage/Launch'), ('growth', 'Growth Stage'), ('expansion', 'Expansion Stage'), ('mature', 'Mature Business'), ('pivot', 'Pivoting')], help_text='Current stage of your business', max_length=20)),
                ('funding_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('resume', models.FileField(blank=True, help_text='Upload your resume (PDF preferred)', null=True, upload_to='resumes/')),
                ('skills', models.TextField(blank=True, help_text='List your key skills (comma-separated)')),
                ('job_level', models.CharField(blank=True, choices=[('entry', 'Entry Level (0-2 years)'), ('junior', 'Junior (2-4 years)'), ('mid', 'Mid Level (4-7 years)'), ('senior', 'Senior Level (7-10 years)'), ('lead', 'Lead/Principal (10+ years)'), ('executive', 'Executive Level')], max_length=20)),
                ('desired_salary_min', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum desired salary', max_digits=10, null=True)),
                ('desired_salary_max', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum desired salary', max_digits=10, null=True)),
                ('availability', models.CharField(blank=True, choices=[('immediate', 'Available Immediately'), ('2_weeks', 'Two Weeks Notice'), ('1_month', 'One Month'), ('flexible', 'Flexible')], max_length=20)),
                ('preferred_employment_type', models.CharField(blank=True, choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('freelance', 'Freelance'), ('internship', 'Internship'), ('any', 'Any')], max_length=20)),
                ('portfolio_url', models.URLField(blank=True, help_text='Link to your portfolio or personal website', null=True)),
                ('linkedin_url', models.URLField(blank=True, help_text='Your LinkedIn profile URL', null=True)),
                ('github_url', models.URLField(blank=True, help_text='Your GitHub profile (for tech roles)', null=True)),
                ('open_to_remote', models.BooleanField(default=True, help_text='Open to remote work opportunities')),
                ('preferred_locations', models.TextField(blank=True, help_text='Preferred work locations (one per line)')),
                ('profile_visibility', models.CharField(choices=[('public', 'Public'), ('members', 'Members Only'), ('private', 'Private')], default='members', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userprofileextension', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email_new_messages', models.BooleanField(default=True, help_text='Email when you receive new messages')),
                ('email_pitch_interest', models.BooleanField(default=True, help_text='Email when someone shows interest in your pitch')),
                ('email_pitch_approved', models.BooleanField(default=True, help_text='Email when your pitch is approved')),
                ('email_weekly_digest', models.BooleanField(default=True, help_text='Weekly summary of platform activity')),
                ('email_job_matches', models.BooleanField(default=True, help_text='Email when new jobs match your profile')),
                ('email_application_updates', models.BooleanField(default=True, help_text='Email when application status changes')),
                ('email_new_applications', models.BooleanField(default=True, help_text='Email when someone applies to your job posting')),
                ('browser_new_messages', models.BooleanField(default=True)),
                ('browser_pitch_updates', models.BooleanField(default=True)),
                ('browser_job_alerts', models.BooleanField(default=True, help_text='Browser notifications for job-related activities')),
                ('sms_critical_updates', models.BooleanField(default=False, help_text='SMS for important account updates')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
